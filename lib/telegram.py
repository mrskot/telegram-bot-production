import os
import requests
import json

class TelegramService:
    def __init__(self):
        # –í–†–ï–ú–ï–ù–ù–´–ô –¢–û–ö–ï–ù –î–õ–Ø –¢–ï–°–¢–ê
        self.token = "8392042106:AAGy5UHlJ9NMLuV9fKtDRLAISFdkdpUown0"
        self.api_url = f"https://api.telegram.org/bot{self.token}"
        
        print("=" * 50)
        print("üü¢ TelegramService –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print(f"üîë –¢–æ–∫–µ–Ω: {self.token[:15]}...")
        print(f"üåê API URL: {self.api_url}")
        print("=" * 50)

    def send_message(self, chat_id, text):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram —Å –ø–æ–ª–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π"""
        print("=" * 50)
        print("üîç –û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø:")
        print(f"üì± Chat ID: {chat_id}")
        print(f"üí¨ –¢–µ–∫—Å—Ç: {text}")
        print(f"üîë –¢–æ–∫–µ–Ω: {self.token[:15]}...")
        print(f"üåê API URL: {self.api_url}")
        print("=" * 50)

        url = f"{self.api_url}/sendMessage"
        payload = {
            'chat_id': chat_id,
            'text': text
        }

        try:
            print("üü° –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –∫ Telegram API...")
            response = requests.post(url, json=payload, timeout=10)
            
            print(f"‚úÖ –û—Ç–≤–µ—Ç Telegram API:")
            print(f"   Status Code: {response.status_code}")
            print(f"   Response: {response.text}")
            
            if response.status_code == 200:
                print("üü¢ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
                return response.json()
            else:
                print(f"üî¥ –û—à–∏–±–∫–∞ Telegram API: {response.status_code}")
                print(f"   Response: {response.text}")
                return None
                
        except requests.exceptions.SSLError as e:
            print(f"üî¥ SSL –û—à–∏–±–∫–∞: {e}")
            return None
        except requests.exceptions.ConnectionError as e:
            print(f"üî¥ –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            return None
        except requests.exceptions.Timeout as e:
            print(f"üî¥ –¢–∞–π–º–∞—É—Ç: {e}")
            return None
        except Exception as e:
            print(f"üî¥ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            return None

    def handle_webhook(self, update_data):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±—Ö—É–∫–∞ –æ—Ç Telegram"""
        print("=" * 50)
        print("üì® –ü–û–õ–£–ß–ï–ù –í–ï–ë–•–£–ö –û–¢ TELEGRAM:")
        print(f"üìä –î–∞–Ω–Ω—ã–µ: {json.dumps(update_data, indent=2, ensure_ascii=False)}")
        print("=" * 50)

        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤–µ–±—Ö—É–∫–∞
            message = update_data.get('message', {})
            chat_id = message.get('chat', {}).get('id')
            text = message.get('text', '')
            
            if chat_id and text:
                print(f"üí¨ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{text}' –æ—Ç chat_id: {chat_id}")
                
                # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
                response_text = f"–í—ã —Å–∫–∞–∑–∞–ª–∏: {text}"
                return self.send_message(chat_id, response_text)
            else:
                print("‚ÑπÔ∏è –ù–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
                return None
                
        except Exception as e:
            print(f"üî¥ –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±—Ö—É–∫–∞: {e}")
            return None

# –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
if __name__ == "__main__":
    print("üß™ –¢–ï–°–¢–ò–†–£–ï–ú TelegramService...")
    bot = TelegramService()
    
    # –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è (–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ)
    # bot.send_message(123456789, "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞")
